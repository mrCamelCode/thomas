use std::collections::HashMap;

use super::{BehaviourList, Entity};

#[allow(dead_code)]
pub struct PrefabFactory {
    /// All prefabs that can be generated by this factory. The map is keyed by name of the prefab, so
    /// your prefab names must be unique.
    prefabs: HashMap<String, (Entity, BehaviourList)>,
}
#[allow(dead_code)]
impl PrefabFactory {
    pub fn new(prefabs: HashMap<String, (Entity, BehaviourList)>) -> Self {
        Self { prefabs }
    }

    pub fn make(&self, prefab_name: &str) -> Option<(Entity, BehaviourList)> {
        if let Some((registered_entity, registered_behaviours)) = self.prefabs.get(prefab_name) {
            return Some((registered_entity.clone(), registered_behaviours.clone()));
        }

        None
    }
}
